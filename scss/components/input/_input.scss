@use '../../global' as *;
@use '../../partials' as *;

.form-control,
.form-select {
  &:focus {
    outline: none;
    box-shadow: none;
  }
}

.form-control.is-invalid, .was-validated .form-control:invalid {
  box-shadow: none;
  
  &:focus {
    outline: none;
    box-shadow: none;
  }
}

.form-item {
  position: relative;
  margin-bottom: size(15);

  input {
    display: block;
    min-width: size(300);
    max-width: size(400);
    height: size(40);
    background: transparent;
    border: solid 1px #ccc;
    @include border(solid, 1, #ccc);
    transition: all .3s ease;
    padding: 0 size(15);

    &:focus{
      border-color: blue
    }
  }

  input, label {
    position: absolute;
    cursor: text;
    z-index: 2;
    top: 13px;
    left: 10px;
    font-size: 12px;
    font-weight: bold;
    background: #fff;
    padding: 0 10px;
    color: #999;
    transition: all .3s ease
  }

  input:focus + label,
  input:valid + label {
    font-size: 11px;
    top: -5px
  }

  input:focus + label{
    color: blue
  }
}

.form-check {
  margin: size(0);

  &-input {
    background-color: $textgray;
    border-color: $textgray;
    
    &:focus {
      outline: none;
      box-shadow: none;
    }

    &:not(:checked)[type=checkbox] {
      --bs-form-switch-bg: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23fff'/%3e%3c/svg%3e");
      background-image: var(--bs-form-switch-bg);
      background-color: $textgray;
      border-color: $textgray;
    }
  }


}

.form-switch {
  padding: size(0);

  .form-check-input {
    cursor: pointer;
    margin: size(0);
    width: size(55);
    height: size(28);
    --bs-form-switch-bg: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23fff'/%3e%3c/svg%3e");
    background-image: var(--bs-form-switch-bg);
  
    &:checked {
      background-color: $hamburgerbg;
      border-color: $hamburgerbg;
    }
  }
}

label {
  color: $dropdownbg;
  @include font($primaryFont, 14, normal, normal, 19.6);
  
  span {
    color: $dangertext;
  }
}

.form-control {
  color: $dropdownbg;
  border-color: rgba($dropdownbg, 0.2);
  @include font($primaryFont, 14, normal, normal, 19.6);
  padding: size(11) size(16);
  @include transitionsall;

  &::placeholder {
    color: $textgray;
  }

  &:focus {
    border-color: $dropdownbg;
  }
}

.inputbox {
  .select-dropdown__button {
    background: $white;
    color: $darktext;
    @include border(solid, 1, rgba($dropdownbg, 0.2));
    @include radius(6);
    padding: size(11) size(16);
    height: size(43.5);
    @include transitionsall;

    .select-dropdown--0 {
      color: $dropdownbg;
      @include font($primaryFont, 12, normal, normal, 16.8);
    }

    .arrowicon {
      svg {
        path {
          fill: $textgray;
        }
      }
    }

    &:focus {
      border-color: $dropdownbg;
    }
  }

  .error-message {
    color: $dangertext;
    @include font($primaryFont, 12, normal, normal, 16.8);
  }
}

.inputbox {
  @include flex-column;
  gap: size(8);
}


.edubtns {
  @include flex-center-vert;
  gap: size(24);
  margin-top: size(20);

  .btn-profile-add,
  .btn-profile-close {
    width: size(124);
    height: size(36);
    @include flex-center;
    text-align: center;
    @include font($primaryFont, 12, semibold, normal, 16.8);
    @include radius(5);
    padding: size(6);
    letter-spacing: size(1.6);
    @include transitionsall;

    @include breakpoint(tab992) {
      font-size: size(14);
    }
  }

  .btn-profile-add {
    @include setBgColor($hamburgerbg, $white);

    @include hover {
      @include setBgColor($dangercolor, $white);
    }
  }
  
  .btn-profile-close {
    @include setBgColor($closebg, $white);

    @include hover {
      @include setBgColor($alertcolor, $white);
    }
  }
}